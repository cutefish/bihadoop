<project name="MRCaching" default="compile">

    <!--Specify external class path-->
    <property name="external.hadoop.home" location="/Hadoop/hadoop-1.0.3" />
    <path id="external.hadoop.classpath">
        <pathelement location="${external.hadoop.home}/build/classes"/>
        <!--<pathelement location="${external.hadoop.home}/conf"/>-->
        <fileset dir="${external.hadoop.home}/lib" includes="**/*.jar"/>
    </path>

    <!--Properties-->
    <property name="src.dir" value="${basedir}/src/java"/>
    <property name="mapred.src.dir" value="${src.dir}/mapred"/> 
    <property name="hdfs.src.dir" value="${src.dir}/hdfs"/> 
    <property name="core.src.dir" value="${src.dir}/core"/> 

    <property name="build.dir" value="${basedir}/build"/>
    <property name="build.classes" value="${build.dir}/classes"/>

    <property name="test.src.dir" value="${basedir}/test"/>
    <property name="test.build.dir" value="${build.dir}/test"/>
    <property name="test.build.classes" value="${test.build.dir}/classes"/>

    <property name="bench.src.dir" value="${basedir}/bench"/>
    <property name="bench.build.dir" value="${build.dir}/bench"/>
    <property name="bench.build.classes" value="${bench.build.dir}/classes"/>
    <property name="bench.build.jar" value="${bench.build.dir}/Bench.jar"/>

    <property name="conf" value="${basedir}/conf"/>

    <property name="bin.dir" value="${basedir}/bin"/>
    <!--Project classpath-->
    <path id="classpath">
        <pathelement location="${build.classes}"/>
        <path refid="external.hadoop.classpath"/>
        <pathelement location="${test.build.classes}"/>
        <pathelement location="${bench.build.classes}"/>
        <pathelement location="${conf}"/>
    </path>

    <!--Targets-->
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${test.build.dir}"/>
        <mkdir dir="${test.build.classes}"/>
        <mkdir dir="${bench.build.dir}"/>
        <mkdir dir="${bench.build.classes}"/>
        <mkdir dir="${conf}"/>
    </target>

    <condition property="compileopts" value="">
        <not>
            <isset property="compileopts"/>
        </not>
    </condition>

    <target name="compile-core-classes" depends="init">
        <javac
            srcdir="${core.src.dir}"
            includes="org/apache/hadoop/**/*.java"
            destdir="${build.classes}">
            <classpath refid="classpath"/>
            <compilerarg line="${compileopts}"/>
        </javac>
    </target>

    <target name="compile-hdfs-classes" depends="compile-core-classes">
        <javac
            srcdir="${hdfs.src.dir}"
            includes="org/apache/hadoop/**/*.java"
            destdir="${build.classes}">
            <classpath refid="classpath"/>
            <compilerarg line="${compileopts}"/>
        </javac>
    </target>

    <target name="compile-mapred-classes" depends="compile-hdfs-classes">
        <javac
            srcdir="${mapred.src.dir}"
            includes="org/apache/hadoop/**/*.java"
            destdir="${build.classes}">
            <classpath refid="classpath"/>
            <compilerarg line="${compileopts}"/>
        </javac>
    </target>

    <target name="compile-test" depends="compile-mapred-classes, compile-hdfs-classes">
        <javac
            srcdir="${test.src.dir}"
            includes="**/*.java"
            destdir="${test.build.classes}">
            <classpath refid="classpath"/>
            <compilerarg line="${compileopts}"/>
        </javac>
        <copy todir="${test.build.classes}">
            <fileset dir="${test.src.dir}" includes="test-default-conf.xml"/>
        </copy>
    </target>

    <target name="compile-bench" depends="compile-mapred-classes, compile-hdfs-classes">
        <javac
            srcdir="${bench.src.dir}"
            includes="**/*.java"
            destdir="${bench.build.classes}">
            <classpath refid="classpath"/>
            <compilerarg line="${compileopts}"/>
        </javac>
        <copy todir="${bench.build.classes}">
            <fileset dir="${bench.src.dir}" includes="*-conf.xml"/>
        </copy>
        <jar 
            destfile="${bench.build.jar}"
            basedir="${bench.build.classes}"
        />
    </target>

    <target name="compile" depends="compile-test, compile-bench">
    </target>

    <property name="classargs" value=""/>
    <target name="runtest">
        <java
            fork="true"
            classname="${classname}">
            <arg line="${classargs}"/>
            <classpath refid="classpath"/>
        </java>
    </target>

    <target name="apply">
        <copy todir="${external.hadoop.home}/src">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
        </copy>
        <copy todir="${external.hadoop.home}/bin">
            <fileset dir="${bin.dir}">
                <include name="*"/>
            </fileset>
        </copy>
    </target>

    <target name="grab">
        <path id="local.files">
            <fileset dir="${src.dir}" includes="**/*.java"/>
        </path>
        <pathconvert pathsep=", " property="file.list" refid="local.files">
            <mapper type="regexp" 
                from="^${src.dir}/(.*)\.java$$" 
                to="\1.java"/>
        </pathconvert>
        <copy todir="${src.dir}">
            <path id="external.files">
                <fileset dir="${external.hadoop.home}/src" includes="${file.list}"/>
            </path>
        </copy>
    </target>

</project>
